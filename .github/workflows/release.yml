name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

  # clippy:
  #   name: Clippy
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout sources
  #       uses: actions/checkout@v2

  #     - name: Install stable toolchain
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable
  #         override: true

  #     - name: Install clippy
  #       run: rustup component add clippy

  #     - name: Run cargo clippy
  #       uses: actions-rs/cargo@v1
  #       with:
  #         command: clippy
  #         args: -- -D warnings

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install rustfmt
        run: rustup component add rustfmt

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Run tests
        run: cargo test --verbose

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [test]
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        include:
          - os: ubuntu-latest
            rust: stable
            target: x86_64-unknown-linux-gnu
            bin: martin
            name: martin-Linux-x86_64.tar.gz
          - os: windows-latest
            rust: stable
            target: x86_64-pc-windows-msvc
            bin: martin.exe
            name: martin-Windows-x86_64.zip
          - os: macOS-latest
            rust: stable
            target: x86_64-apple-darwin
            bin: martin
            name: martin-Darwin-x86_64.tar.gz
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          target: ${{ matrix.target }}
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
      - name: Package
        shell: bash
        run: |
          strip target/${{ matrix.target }}/release/${{ matrix.bin }}
          cd target/${{ matrix.target }}/release
          if [[ "${{ matrix.os }}" == "windows-latest" ]]
          then
            7z a ../../../${{ matrix.name }} ${{ matrix.bin }}
          else
            tar czvf ../../../${{ matrix.name }} ${{ matrix.bin }}
          fi
          cd -
      - name: Generate SHA-256
        if: matrix.os == 'macOS-latest'
        run: shasum -a 256 ${{ matrix.name }}
      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: "martin*"
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
